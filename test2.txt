1. git init  //  원하는 폴더에 깃 저장소 만들기
 		  즉, 현재 폴더에서 깃을 사용할 수 있도록 초기화

2. git status  //  깃 상태 확인
                    - on branch main : 현재 main branch 에 있습니다.
		    - no commits yet  : 아직 커밋한 파일이 없습니다.
                    - nothing to commit : 현재 커밋할 파일이 없습니다.
                    - untracked files   : 버전을 아직 한 번도 관리하지 않은 파일

3. git add 파일이름 or ./ (모든파일)  //  작업트리에서 파일을 만들거나 수정해서 스테이징 or 스테이지 영역에 올림  
						      버전 만들 준비를 하라고 깃 한테 알리는 것
                                                      후에 git status 확인해보면 changes to be committed, new file: hello.txt 로 바뀜
					              의미: 새 파일 hello.txt 를 앞으로 commit 할거얌!

4. git commit -m "메세지"  //  파일이 스테이징 영역에 있다면 이제 버전을 만들 수 있다.
				         버전 만드는 것은 깃에서는 commit(커밋) 한다 라고 한다.
					 commit 할 때는 버전의 변경 사항을 확인할 수 있도록 메세지를 함께 기록해 두어야 합니다.
                                         commit 을 하면 1 file changed, 1 insertion (+) 
                                         의미: 파일 1개가 변경 되었고, 파일에 1개의 내용이 추가 되었다.
                                         즉, 스테이지에 있던 hello.txt 파일이 저장소에 추가됨

5. git log  //  commit 했던 기록을 자세히 살펴보기
                   commit 즉 버전을 만든사람, 시간, 메세지 가 표시됨

6. git commit am "메세지"  //  스테이징과 커밋 한번에 처리

7. https://github.com/catgirl4859/practice_basic.git : 해당 원격저장소 이름은 이렇게 구성되어 있다. 사용자계정 + 저장소이름.git

8. git remote add origin 깃 허브의 해당 저장소 복사  //  지역저장소와 원격저장소의 연결
                                                                             git remote -v 로 제대로 연결이 되었는지 확인 